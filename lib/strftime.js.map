{"version":3,"sources":["../src/strftime.js"],"names":["strftime","date","format","names","timestamp","getTime","replace","_","c","padding","length","days","getDay","abbreviated_days","months","getMonth","abbreviated_months","pad","Math","floor","getFullYear","getDate","getHours","hours12","ceil","Date","getMinutes","String","ordinal","am","toLowerCase","pm","toUpperCase","getSeconds","weekNumber","y","slice","tzString","toString","match","off","getTimezoneOffset","round","abs","n","s","hour","i","ii","firstWeekday","wday","firstDayOfYear","yday","weekNum"],"mappings":";;;;;;AAAA;;;;;;AAEA,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuC;AACrC,MAAMC,YAAYH,KAAKI,OAAL,EAAlB;;AAEAF,UAAQA,4BAAR;;AAEA,SAAOD,OAAOI,OAAP,CAAe,aAAf,EAA8B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC7C,QAAIC,UAAU,IAAd;;AAEA,QAAID,EAAEE,MAAF,IAAY,CAAhB,EAAmB;AACjB,cAAQF,EAAE,CAAF,CAAR;AACE,aAAK,GAAL;AAAUC,oBAAU,EAAV,CAAe;AACzB,aAAK,GAAL;AAAUA,oBAAU,GAAV,CAAe;AACzB,aAAK,GAAL;AAAUA,oBAAU,GAAV,CAAe;AACzB;AAAS,iBAAOF,CAAP,CAJX,CAIqB;AAJrB;;AAOAC,UAAIA,EAAE,CAAF,CAAJ;AACD;;AAED,YAAQA,CAAR;AACE,WAAK,GAAL;AAAU,eAAOL,MAAMQ,IAAN,CAAWV,KAAKW,MAAL,EAAX,CAAP;AACV,WAAK,GAAL;AAAU,eAAOT,MAAMU,gBAAN,CAAuBZ,KAAKW,MAAL,EAAvB,CAAP;AACV,WAAK,GAAL;AAAU,eAAOT,MAAMW,MAAN,CAAab,KAAKc,QAAL,EAAb,CAAP;AACV,WAAK,GAAL;AAAU,eAAOZ,MAAMa,kBAAN,CAAyBf,KAAKc,QAAL,EAAzB,CAAP;AACV,WAAK,GAAL;AAAU,eAAOE,IAAIC,KAAKC,KAAL,CAAWlB,KAAKmB,WAAL,KAAqB,GAAhC,CAAJ,EAA0CX,OAA1C,CAAP;AACV,WAAK,GAAL;AAAU,eAAOT,SAASC,IAAT,EAAe,UAAf,CAAP;AACV,WAAK,GAAL;AAAU,eAAOgB,IAAIhB,KAAKoB,OAAL,EAAJ,EAAoBZ,OAApB,CAAP;AACV,WAAK,GAAL;AAAU,eAAOR,KAAKoB,OAAL,EAAP;AACV,WAAK,GAAL;AAAU,eAAOrB,SAASC,IAAT,EAAe,UAAf,CAAP;AACV,WAAK,GAAL;AAAU,eAAOgB,IAAIhB,KAAKqB,QAAL,EAAJ,EAAqBb,OAArB,CAAP;AACV,WAAK,GAAL;AAAU,eAAON,MAAMa,kBAAN,CAAyBf,KAAKc,QAAL,EAAzB,CAAP;AACV,WAAK,GAAL;AAAU,eAAOE,IAAIM,QAAQtB,IAAR,CAAJ,EAAmBQ,OAAnB,CAAP;AACV,WAAK,GAAL;AAAU,eAAOQ,IAAIC,KAAKM,IAAL,CAAU,CAACvB,KAAKI,OAAL,KAAkB,IAAIoB,IAAJ,CAASxB,KAAKmB,WAAL,EAAT,EAA6B,CAA7B,EAAgC,CAAhC,CAAD,CAAqCf,OAArC,EAAlB,KAAqE,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAtF,CAAV,CAAJ,EAA0G,CAA1G,CAAP;AACV,WAAK,GAAL;AAAU,eAAOY,IAAIhB,KAAKqB,QAAL,EAAJ,EAAqBb,YAAY,IAAZ,GAAmB,GAAnB,GAAyBA,OAA9C,CAAP;AACV,WAAK,GAAL;AAAU,eAAOQ,IAAIC,KAAKC,KAAL,CAAWf,YAAY,IAAvB,CAAJ,EAAkC,CAAlC,CAAP;AACV,WAAK,GAAL;AAAU,eAAOa,IAAIM,QAAQtB,IAAR,CAAJ,EAAmBQ,YAAY,IAAZ,GAAmB,GAAnB,GAAyBA,OAA5C,CAAP;AACV,WAAK,GAAL;AAAU,eAAOQ,IAAIhB,KAAKyB,UAAL,EAAJ,EAAuBjB,OAAvB,CAAP;AACV,WAAK,GAAL;AAAU,eAAOQ,IAAIhB,KAAKc,QAAL,KAAkB,CAAtB,EAAyBN,OAAzB,CAAP;AACV,WAAK,GAAL;AAAU,eAAO,IAAP;AACV,WAAK,GAAL;AAAU,eAAOkB,OAAO1B,KAAKoB,OAAL,EAAP,IAAyBO,QAAQ3B,KAAKoB,OAAL,EAAR,CAAhC;AACV,WAAK,GAAL;AAAU,eAAOpB,KAAKqB,QAAL,KAAkB,EAAlB,GAAuBnB,MAAM0B,EAAN,CAASC,WAAT,EAAvB,GAAgD3B,MAAM4B,EAAN,CAASD,WAAT,EAAvD;AACV,WAAK,GAAL;AAAU,eAAO7B,KAAKqB,QAAL,KAAkB,EAAlB,GAAuBnB,MAAM0B,EAAN,CAASG,WAAT,EAAvB,GAAgD7B,MAAM4B,EAAN,CAASC,WAAT,EAAvD;AACV,WAAK,GAAL;AAAU,eAAOhC,SAASC,IAAT,EAAe,OAAf,CAAP;AACV,WAAK,GAAL;AAAU,eAAOD,SAASC,IAAT,EAAe,aAAf,CAAP;AACV,WAAK,GAAL;AAAU,eAAOgB,IAAIhB,KAAKgC,UAAL,EAAJ,EAAuBxB,OAAvB,CAAP;AACV,WAAK,GAAL;AAAU,eAAOS,KAAKC,KAAL,CAAWf,YAAY,IAAvB,CAAP;AACV,WAAK,GAAL;AAAU,eAAOJ,SAASC,IAAT,EAAe,UAAf,CAAP;AACV,WAAK,GAAL;AAAU,eAAO,IAAP;AACV,WAAK,GAAL;AAAU,eAAOgB,IAAIiB,WAAWjC,IAAX,EAAiB,QAAjB,CAAJ,EAAgCQ,OAAhC,CAAP;AACV,WAAK,GAAL;AAAU,eAAOR,KAAKW,MAAL,OAAkB,CAAlB,GAAsB,CAAtB,GAA0BX,KAAKW,MAAL,EAAjC;AACV,WAAK,GAAL;AAAU,eAAOZ,SAASC,IAAT,EAAe,UAAf,CAAP;AACV,WAAK,GAAL;AAAU,eAAOgB,IAAIiB,WAAWjC,IAAX,EAAiB,QAAjB,CAAJ,EAAgCQ,OAAhC,CAAP;AACV,WAAK,GAAL;AAAU,eAAOR,KAAKW,MAAL,EAAP;AACV,WAAK,GAAL;AAAU,eAAOX,KAAKmB,WAAL,EAAP;AACV,WAAK,GAAL;AAAU,YAAMe,IAAIR,OAAO1B,KAAKmB,WAAL,EAAP,CAAV,CAAsC,OAAOe,EAAEC,KAAF,CAAQD,EAAEzB,MAAF,GAAW,CAAnB,CAAP;AAChD,WAAK,GAAL;AAAU,YAAM2B,WAAWpC,KAAKqC,QAAL,GAAgBC,KAAhB,CAAsB,WAAtB,CAAjB,CAAqD,OAAOF,YAAYA,SAAS,CAAT,CAAZ,IAA2B,EAAlC;AAC/D,WAAK,GAAL;AAAU,YAAMG,MAAMvC,KAAKwC,iBAAL,EAAZ,CAAsC,OAAU,CAACD,MAAM,CAAN,GAAU,GAAV,GAAgB,GAAjB,IAAwBvB,IAAIC,KAAKwB,KAAL,CAAWxB,KAAKyB,GAAL,CAASH,MAAM,EAAf,CAAX,CAAJ,EAAoC,CAApC,CAAlC,SAA4EvB,IAAIuB,MAAM,EAAV,EAAc,CAAd,CAA5E;AAChD;AAAS,eAAOhC,CAAP;AAtCX;AAwCD,GAtDM,CAAP;AAuDD;;AAED,SAASS,GAAT,CAAa2B,CAAb,EAAgBnC,OAAhB,EAAyBC,MAAzB,EAAiC;AAC/B,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC/BC,aAASD,OAAT;AACAA,cAAU,GAAV;AACD;;AAED,MAAIA,YAAY,IAAhB,EAAsB;AACpBA,cAAU,GAAV;AACD;;AAEDC,WAASA,UAAU,CAAnB;;AAEA,MAAImC,IAAIlB,OAAOiB,CAAP,CAAR;;AAEA,MAAInC,OAAJ,EAAa;AACX,WAAOoC,EAAEnC,MAAF,GAAWA,MAAlB,EAA0B;AACxBmC,UAAIpC,UAAUoC,CAAd;AACD;AACF;;AAED,SAAOA,CAAP;AACD;;AAED,SAAStB,OAAT,CAAiBtB,IAAjB,EAAuB;AACrB,MAAI6C,OAAO7C,KAAKqB,QAAL,EAAX;;AAEA,MAAIwB,SAAS,CAAb,EAAgB;AACdA,WAAO,EAAP;AACD,GAFD,MAEO,IAAIA,OAAO,EAAX,EAAe;AACpBA,YAAQ,EAAR;AACD;;AAED,SAAOA,IAAP;AACD;;AAED,SAASlB,OAAT,CAAiBgB,CAAjB,EAAoB;AAClB,MAAMG,IAAIH,IAAI,EAAd;AACA,MAAMI,KAAKJ,IAAI,GAAf;;AAEA,MAAKI,MAAM,EAAN,IAAYA,MAAM,EAAnB,IAA0BD,MAAM,CAAhC,IAAqCA,KAAK,CAA9C,EAAiD;AAC/C,WAAO,IAAP;AACD;;AAED,UAAQA,CAAR;AACE,SAAK,CAAL;AAAQ,aAAO,IAAP;AACR,SAAK,CAAL;AAAQ,aAAO,IAAP;AACR,SAAK,CAAL;AAAQ,aAAO,IAAP;AAHV;AAKD;;AAED,SAASb,UAAT,CAAoBjC,IAApB,EAAiD;AAAA,MAAvBgD,YAAuB,uEAAV,QAAU;;AAC/C,MAAIC,OAAOjD,KAAKW,MAAL,EAAX;;AAEA,MAAIqC,gBAAgB,QAApB,EAA8B;AAC5B,QAAIC,SAAS,CAAb,EAAgB;AAAE;AAChBA,aAAO,CAAP;AACD,KAFD,MAEO;AACLA;AACD;AACF;;AAED,MAAMC,iBAAiB,IAAI1B,IAAJ,CAASxB,KAAKmB,WAAL,EAAT,EAA6B,CAA7B,EAAgC,CAAhC,CAAvB;AACA,MAAMgC,OAAO,CAACnD,OAAOkD,cAAR,IAA0B,QAAvC;AACA,MAAME,UAAU,CAACD,OAAO,CAAP,GAAWF,IAAZ,IAAoB,CAApC;;AAEA,SAAOhC,KAAKC,KAAL,CAAWkC,OAAX,CAAP;AACD;;kBAEcrD,Q","file":"strftime.js","sourcesContent":["import dateNames from 'date-names';\r\n\r\nfunction strftime(date, format, names) {\r\n  const timestamp = date.getTime();\r\n\r\n  names = names || dateNames;\r\n\r\n  return format.replace(/%([-_0]?.)/g, (_, c) => {\r\n    let padding = null;\r\n\r\n    if (c.length == 2) {\r\n      switch (c[0]) {\r\n        case '-': padding = '';  break;\r\n        case '_': padding = ' '; break;\r\n        case '0': padding = '0'; break;\r\n        default: return _; // should never reach this one\r\n      }\r\n\r\n      c = c[1];\r\n    }\r\n\r\n    switch (c) {\r\n      case 'A': return names.days[date.getDay()];\r\n      case 'a': return names.abbreviated_days[date.getDay()];\r\n      case 'B': return names.months[date.getMonth()];\r\n      case 'b': return names.abbreviated_months[date.getMonth()];\r\n      case 'C': return pad(Math.floor(date.getFullYear() / 100), padding);\r\n      case 'D': return strftime(date, '%m/%d/%y');\r\n      case 'd': return pad(date.getDate(), padding);\r\n      case 'e': return date.getDate();\r\n      case 'F': return strftime(date, '%Y-%m-%d');\r\n      case 'H': return pad(date.getHours(), padding);\r\n      case 'h': return names.abbreviated_months[date.getMonth()];\r\n      case 'I': return pad(hours12(date), padding);\r\n      case 'j': return pad(Math.ceil((date.getTime() - (new Date(date.getFullYear(), 0, 1)).getTime()) / (1000 * 60 * 60 * 24)), 3);\r\n      case 'k': return pad(date.getHours(), padding === null ? ' ' : padding);\r\n      case 'L': return pad(Math.floor(timestamp % 1000), 3);\r\n      case 'l': return pad(hours12(date), padding === null ? ' ' : padding);\r\n      case 'M': return pad(date.getMinutes(), padding);\r\n      case 'm': return pad(date.getMonth() + 1, padding);\r\n      case 'n': return '\\n';\r\n      case 'o': return String(date.getDate()) + ordinal(date.getDate());\r\n      case 'P': return date.getHours() < 12 ? names.am.toLowerCase() : names.pm.toLowerCase();\r\n      case 'p': return date.getHours() < 12 ? names.am.toUpperCase() : names.pm.toUpperCase();\r\n      case 'R': return strftime(date, '%H:%M');\r\n      case 'r': return strftime(date, '%I:%M:%S %p');\r\n      case 'S': return pad(date.getSeconds(), padding);\r\n      case 's': return Math.floor(timestamp / 1000);\r\n      case 'T': return strftime(date, '%H:%M:%S');\r\n      case 't': return '\\t';\r\n      case 'U': return pad(weekNumber(date, 'sunday'), padding);\r\n      case 'u': return date.getDay() === 0 ? 7 : date.getDay();\r\n      case 'v': return strftime(date, '%e-%b-%Y');\r\n      case 'W': return pad(weekNumber(date, 'monday'), padding);\r\n      case 'w': return date.getDay();\r\n      case 'Y': return date.getFullYear();\r\n      case 'y': const y = String(date.getFullYear()); return y.slice(y.length - 2);\r\n      case 'Z': const tzString = date.toString().match(/\\((\\w+)\\)/); return tzString && tzString[1] || '';\r\n      case 'z': const off = date.getTimezoneOffset(); return `${(off > 0 ? '-' : '+') + pad(Math.round(Math.abs(off / 60)), 2)}:${pad(off % 60, 2)}`;\r\n      default: return c;\r\n    }\r\n  });\r\n}\r\n\r\nfunction pad(n, padding, length) {\r\n  if (typeof padding === 'number') {\r\n    length = padding;\r\n    padding = '0';\r\n  }\r\n\r\n  if (padding === null) {\r\n    padding = '0';\r\n  }\r\n\r\n  length = length || 2;\r\n\r\n  let s = String(n);\r\n\r\n  if (padding) {\r\n    while (s.length < length) {\r\n      s = padding + s;\r\n    }\r\n  }\r\n\r\n  return s;\r\n}\r\n\r\nfunction hours12(date) {\r\n  let hour = date.getHours();\r\n\r\n  if (hour === 0) {\r\n    hour = 12;\r\n  } else if (hour > 12) {\r\n    hour -= 12;\r\n  }\r\n\r\n  return hour;\r\n}\r\n\r\nfunction ordinal(n) {\r\n  const i = n % 10;\r\n  const ii = n % 100;\r\n\r\n  if ((ii >= 11 && ii <= 13) || i === 0 || i >= 4) {\r\n    return 'th';\r\n  }\r\n\r\n  switch (i) {\r\n    case 1: return 'st';\r\n    case 2: return 'nd';\r\n    case 3: return 'rd';\r\n  }\r\n}\r\n\r\nfunction weekNumber(date, firstWeekday='sunday') {\r\n  let wday = date.getDay();\r\n\r\n  if (firstWeekday == 'monday') {\r\n    if (wday === 0) { // Sunday\r\n      wday = 6;\r\n    } else {\r\n      wday--;\r\n    }\r\n  }\r\n\r\n  const firstDayOfYear = new Date(date.getFullYear(), 0, 1);\r\n  const yday = (date - firstDayOfYear) / 86400000;\r\n  const weekNum = (yday + 7 - wday) / 7;\r\n\r\n  return Math.floor(weekNum);\r\n}\r\n\r\nexport default strftime;\r\n"]}